{"ast":null,"code":"var _jsxFileName = \"/Users/gnlc/Code/react-native-gnlc-cmyk/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { useState } from \"react\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"./Platform\";\nimport { Container, Row } from \"./Styles\";\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\"\n};\nconst Components = {\n  g: {\n    component: React.createElement(G, {\n      as: Letter,\n      color: processColor(colors.black),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      }\n    }),\n    backgroundColor: colors.cyan\n  },\n  n: {\n    component: React.createElement(N, {\n      as: Letter,\n      color: processColor(colors.cyan),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      }\n    }),\n    backgroundColor: colors.magenta\n  },\n  l: {\n    component: React.createElement(L, {\n      as: Letter,\n      color: processColor(colors.magenta),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      }\n    }),\n    backgroundColor: colors.yellow\n  },\n  c: {\n    component: React.createElement(C, {\n      as: Letter,\n      color: processColor(colors.yellow),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      }\n    }),\n    backgroundColor: colors.black\n  }\n};\nconst Letter = styled.View(_templateObject());\nDimensions.addEventListener(\"change\", () => {});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      devicetype: Platform.isTablet() ? \"tablet\" : \"phone\"\n    };\n    Dimensions.addEventListener(\"change\", () => {\n      this.setState({\n        orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\"\n      });\n    });\n  }\n\n  render() {\n    const {\n      orientation\n    } = this.state;\n    return React.createElement(Container, {\n      orientation: orientation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      }\n    }, React.createElement(StatusBar, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      }\n    }), Object.keys(Components).map((key, i) => {\n      return React.createElement(Row, {\n        key: i,\n        backgroundColor: Components[key].backgroundColor,\n        zIndex: i * 10\n      }, Components[key].component);\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gnlc/Code/react-native-gnlc-cmyk/App.js"],"names":["React","useState","Platform","Container","Row","G","N","L","C","colors","black","cyan","magenta","yellow","Components","g","component","Letter","processColor","backgroundColor","n","l","c","styled","View","Dimensions","addEventListener","App","Component","constructor","state","orientation","isPortrait","devicetype","isTablet","setState","render","Object","keys","map","key","i","createElement","zIndex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { processColor, Text, Dimensions, StatusBar } from \"react-native\";\n\nimport Platform from \"./Platform\";\nimport { Container, Row } from \"./Styles\";\n\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\n\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\",\n};\n\nconst Components = {\n  g: {\n    component: <G as={Letter} color={processColor(colors.black)} />,\n    backgroundColor: colors.cyan,\n  },\n  n: {\n    component: <N as={Letter} color={processColor(colors.cyan)} />,\n    backgroundColor: colors.magenta,\n  },\n  l: {\n    component: <L as={Letter} color={processColor(colors.magenta)} />,\n    backgroundColor: colors.yellow,\n  },\n  c: {\n    component: <C as={Letter} color={processColor(colors.yellow)} />,\n    backgroundColor: colors.black,\n  },\n};\n\nconst Letter = styled.View``;\n\nDimensions.addEventListener(\"change\", () => {});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      devicetype: Platform.isTablet() ? \"tablet\" : \"phone\",\n    };\n\n    Dimensions.addEventListener(\"change\", () => {\n      this.setState({\n        orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      });\n    });\n  }\n\n  render() {\n    const { orientation } = this.state;\n    return (\n      <Container orientation={orientation}>\n        <StatusBar hidden />\n        {Object.keys(Components).map((key, i) => {\n          return React.createElement(\n            Row,\n            {\n              key: i,\n              backgroundColor: Components[key].backgroundColor,\n              zIndex: i * 10,\n            },\n            Components[key].component\n          );\n        })}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}