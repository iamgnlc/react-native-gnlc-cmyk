{"ast":null,"code":"var _jsxFileName = \"/Users/gnlc/Code/react-native-gnlc-cmyk/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/icon-button.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport isString from 'lodash/isString';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8\n  },\n  touchable: {\n    overflow: 'hidden'\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent'\n  }\n});\nconst IOS7_BLUE = '#007AFF';\nconst TEXT_PROP_NAMES = ['ellipsizeMode', 'numberOfLines', 'textBreakStrategy', 'selectable', 'suppressHighlighting', 'allowFontScaling', 'adjustsFontSizeToFit', 'minimumFontScale'];\nconst TOUCHABLE_PROP_NAMES = ['accessible', 'accessibilityLabel', 'accessibilityHint', 'accessibilityComponentType', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'onFocus', 'onBlur', 'disabled', 'onPress', 'onPressIn', 'onPressOut', 'onLayout', 'onLongPress', 'nativeID', 'testID', 'delayPressIn', 'delayPressOut', 'delayLongPress', 'activeOpacity', 'underlayColor', 'selectionColor', 'onShowUnderlay', 'onHideUnderlay', 'hasTVPreferredFocus', 'tvParallaxProperties'];\nexport default function createIconButtonComponent(Icon) {\n  var _class, _temp;\n\n  return _temp = _class = class IconButton extends PureComponent {\n    render() {\n      const _this$props = this.props,\n            {\n        style,\n        iconStyle,\n        children\n      } = _this$props,\n            restProps = _objectWithoutProperties(_this$props, [\"style\", \"iconStyle\", \"children\"]);\n\n      const iconProps = pick(restProps, TEXT_PROP_NAMES, 'style', 'name', 'size', 'color');\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n      return React.createElement(TouchableHighlight, _extends({\n        style: [styles.touchable, blockStyle]\n      }, touchableProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }), React.createElement(View, _extends({\n        style: [styles.container, blockStyle, style]\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        }\n      }), React.createElement(Icon, _extends({}, iconProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        }\n      })), isString(children) ? React.createElement(Text, {\n        style: [styles.text, colorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }, children) : children));\n    }\n\n  }, _class.propTypes = {\n    backgroundColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    borderRadius: PropTypes.number,\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    size: PropTypes.number,\n    iconStyle: PropTypes.any,\n    style: PropTypes.any,\n    children: PropTypes.node\n  }, _class.defaultProps = {\n    backgroundColor: IOS7_BLUE,\n    borderRadius: 5,\n    color: 'white',\n    size: 20\n  }, _temp;\n}","map":{"version":3,"sources":["/Users/gnlc/Code/react-native-gnlc-cmyk/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/icon-button.js"],"names":["isString","omit","pick","React","PureComponent","PropTypes","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","padding","touchable","overflow","icon","marginRight","text","fontWeight","backgroundColor","IOS7_BLUE","TEXT_PROP_NAMES","TOUCHABLE_PROP_NAMES","createIconButtonComponent","Icon","IconButton","render","props","style","iconStyle","children","restProps","iconProps","touchableProps","Object","keys","colorStyle","blockStyle","propTypes","oneOfType","string","number","borderRadius","color","size","any","node","defaultProps"],"mappings":"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","sourcesContent":["import isString from 'lodash/isString';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {isString(children) ? (\n              <Text style={[styles.text, colorStyle]}>{children}</Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}