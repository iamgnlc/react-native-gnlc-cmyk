{"ast":null,"code":"var _jsxFileName = \"/Users/gnlc/Code/react-native-gnlc-cmyk/App.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  flex: 1;\\n  overflow: hidden;\\n  align-items: stretch;\\n  justify-content: center;\\n  z-index: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: 4;\\n  flex-direction: \", \";\\n  align-items: stretch;\\n  justify-content: center;\\n  z-index: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { useState } from \"react\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styled from \"styled-components/native\";\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\"\n};\nconst {\n  width,\n  height\n} = Dimensions.get(\"window\");\n\nconst isPortrait = () => {\n  return height >= width;\n};\n\nconst isLandscape = () => {\n  return width >= height;\n};\n\nconst useForceUpdate = () => {\n  const [value, setValue] = useState(0);\n  return () => setValue(value => ++value);\n};\n\nconst Container = styled.View(_templateObject(), isLandscape() ? \"column\" : \"row\");\nconst Row = styled.View(_templateObject2(), props => props.backgroundColor);\nconst Letter = styled.View(_templateObject3());\nDimensions.addEventListener(\"change\", () => {});\nexport default App = () => {\n  useForceUpdate();\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }), React.createElement(Row, {\n    backgroundColor: colors.cyan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }, React.createElement(G, {\n    as: Letter,\n    color: processColor(colors.black),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  })), React.createElement(Row, {\n    backgroundColor: colors.magenta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    }\n  }, \"N\")), React.createElement(Row, {\n    backgroundColor: colors.yellow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    }\n  }, \"L\")), React.createElement(Row, {\n    backgroundColor: colors.black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    }\n  }, \"C\")));\n};","map":{"version":3,"sources":["/Users/gnlc/Code/react-native-gnlc-cmyk/App.js"],"names":["React","useState","styled","G","N","L","C","colors","black","cyan","magenta","yellow","width","height","Dimensions","get","isPortrait","isLandscape","useForceUpdate","value","setValue","Container","View","Row","props","backgroundColor","Letter","addEventListener","App","processColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,CAAP;AACA,OAAOC,CAAP;AACA,OAAOC,CAAP;AACA,OAAOC,CAAP;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,SADM;AAEbC,EAAAA,IAAI,EAAE,SAFO;AAGbC,EAAAA,OAAO,EAAE,SAHI;AAIbC,EAAAA,MAAM,EAAE;AAJK,CAAf;AAOA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAoBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,SAAOH,MAAM,IAAID,KAAjB;AACD,CAFD;;AAIA,MAAMK,WAAW,GAAG,MAAM;AACxB,SAAOL,KAAK,IAAIC,MAAhB;AACD,CAFD;;AAIA,MAAMK,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAlC;AACA,SAAO,MAAMmB,QAAQ,CAAED,KAAD,IAAW,EAAEA,KAAd,CAArB;AACD,CAHD;;AAKA,MAAME,SAAS,GAAGnB,MAAM,CAACoB,IAAV,oBAGKL,WAAW,KAAK,QAAL,GAAgB,KAHhC,CAAf;AASA,MAAMM,GAAG,GAAGrB,MAAM,CAACoB,IAAV,qBACcE,KAAD,IAAWA,KAAK,CAACC,eAD9B,CAAT;AASA,MAAMC,MAAM,GAAGxB,MAAM,CAACoB,IAAV,oBAAZ;AAEAR,UAAU,CAACa,gBAAX,CAA4B,QAA5B,EAAsC,MAAM,CAAE,CAA9C;AAEA,eAAeC,GAAG,GAAG,MAAM;AACzBV,EAAAA,cAAc;AACd,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAEX,MAAM,CAACE,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD;AAAG,IAAA,EAAE,EAAEiB,MAAP;AAAe,IAAA,KAAK,EAAEG,YAAY,CAACtB,MAAM,CAACC,KAAR,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAED,MAAM,CAACG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CALF,EASE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAEH,MAAM,CAACI,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CATF,EAaE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAEJ,MAAM,CAACC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CAbF,CADF;AAoBD,CAtBD","sourcesContent":["import React, { useState } from \"react\";\nimport { processColor, Text, Dimensions, StatusBar } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\n\n// const width = \"80%\";\n// const height = \"40%\";\n\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\",\n};\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst isPortrait = () => {\n  return height >= width;\n};\n\nconst isLandscape = () => {\n  return width >= height;\n};\n\nconst useForceUpdate = () => {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue((value) => ++value); // update the state to force render\n};\n\nconst Container = styled.View`\n  display: flex;\n  flex: 4;\n  flex-direction: ${isLandscape() ? \"column\" : \"row\"};\n  align-items: stretch;\n  justify-content: center;\n  z-index: 0;\n`;\n\nconst Row = styled.View`\n  background-color: ${(props) => props.backgroundColor};\n  flex: 1;\n  overflow: hidden;\n  align-items: stretch;\n  justify-content: center;\n  z-index: 1;\n`;\n\nconst Letter = styled.View``;\n\nDimensions.addEventListener(\"change\", () => {});\n\nexport default App = () => {\n  useForceUpdate();\n  return (\n    <Container>\n      <StatusBar hidden />\n      <Row backgroundColor={colors.cyan}>\n        <G as={Letter} color={processColor(colors.black)} />\n      </Row>\n      <Row backgroundColor={colors.magenta}>\n        {/* <N as={Letter} color={processColor(colors.cyan)} /> */}\n        <Text>N</Text>\n      </Row>\n      <Row backgroundColor={colors.yellow}>\n        {/* <L as={Letter} color={processColor(colors.magenta)} /> */}\n        <Text>L</Text>\n      </Row>\n      <Row backgroundColor={colors.black}>\n        {/* <C as={Letter} color={processColor(colors.yellow)} /> */}\n        <Text>C</Text>\n      </Row>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}