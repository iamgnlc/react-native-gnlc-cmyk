{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nconst msp = (dim, limit) => {\n  return dim.scale * dim.width >= limit || dim.scale * dim.height >= limit;\n};\n\nconst isPortrait = () => {\n  const dim = Dimensions.get(\"screen\");\n  return dim.height >= dim.width;\n};\n\nconst isLandscape = () => {\n  const dim = Dimensions.get(\"screen\");\n  return dim.width >= dim.height;\n};\n\nconst isTablet = () => {\n  const dim = Dimensions.get(\"screen\");\n  return dim.scale < 2 && msp(dim, 1000) || dim.scale >= 2 && msp(dim, 1900);\n};\n\nconst isPhone = () => {\n  return !isTablet();\n};\n\nexport default {\n  isPortrait,\n  isLandscape,\n  isTablet,\n  isPhone\n};","map":{"version":3,"sources":["/Users/gnlc/Code/react-native-gnlc-cmyk/Platform.js"],"names":["msp","dim","limit","scale","width","height","isPortrait","Dimensions","get","isLandscape","isTablet","isPhone"],"mappings":";;AAOA,MAAMA,GAAG,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1B,SAAOD,GAAG,CAACE,KAAJ,GAAYF,GAAG,CAACG,KAAhB,IAAyBF,KAAzB,IAAkCD,GAAG,CAACE,KAAJ,GAAYF,GAAG,CAACI,MAAhB,IAA0BH,KAAnE;AACD,CAFD;;AAOA,MAAMI,UAAU,GAAG,MAAM;AACvB,QAAML,GAAG,GAAGM,UAAU,CAACC,GAAX,CAAe,QAAf,CAAZ;AACA,SAAOP,GAAG,CAACI,MAAJ,IAAcJ,GAAG,CAACG,KAAzB;AACD,CAHD;;AAQA,MAAMK,WAAW,GAAG,MAAM;AACxB,QAAMR,GAAG,GAAGM,UAAU,CAACC,GAAX,CAAe,QAAf,CAAZ;AACA,SAAOP,GAAG,CAACG,KAAJ,IAAaH,GAAG,CAACI,MAAxB;AACD,CAHD;;AAQA,MAAMK,QAAQ,GAAG,MAAM;AACrB,QAAMT,GAAG,GAAGM,UAAU,CAACC,GAAX,CAAe,QAAf,CAAZ;AACA,SACGP,GAAG,CAACE,KAAJ,GAAY,CAAZ,IAAiBH,GAAG,CAACC,GAAD,EAAM,IAAN,CAArB,IAAsCA,GAAG,CAACE,KAAJ,IAAa,CAAb,IAAkBH,GAAG,CAACC,GAAD,EAAM,IAAN,CAD7D;AAGD,CALD;;AAUA,MAAMU,OAAO,GAAG,MAAM;AACpB,SAAO,CAACD,QAAQ,EAAhB;AACD,CAFD;;AAIA,eAAe;AACbJ,EAAAA,UADa;AAEbG,EAAAA,WAFa;AAGbC,EAAAA,QAHa;AAIbC,EAAAA;AAJa,CAAf","sourcesContent":["import { Dimensions } from \"react-native\";\n\n/**\n *\n * @param {ScaledSize} dim the dimensions object\n * @param {*} limit the limit on the scaled dimension\n */\nconst msp = (dim, limit) => {\n  return dim.scale * dim.width >= limit || dim.scale * dim.height >= limit;\n};\n\n/**\n * Returns true if the screen is in portrait mode\n */\nconst isPortrait = () => {\n  const dim = Dimensions.get(\"screen\");\n  return dim.height >= dim.width;\n};\n\n/**\n * Returns true of the screen is in landscape mode\n */\nconst isLandscape = () => {\n  const dim = Dimensions.get(\"screen\");\n  return dim.width >= dim.height;\n};\n\n/**\n * Returns true if the device is a tablet\n */\nconst isTablet = () => {\n  const dim = Dimensions.get(\"screen\");\n  return (\n    (dim.scale < 2 && msp(dim, 1000)) || (dim.scale >= 2 && msp(dim, 1900))\n  );\n};\n\n/**\n * Returns true if the device is a phone\n */\nconst isPhone = () => {\n  return !isTablet();\n};\n\nexport default {\n  isPortrait,\n  isLandscape,\n  isTablet,\n  isPhone,\n};\n"]},"metadata":{},"sourceType":"module"}