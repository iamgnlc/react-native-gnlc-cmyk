{"ast":null,"code":"var _jsxFileName = \"/Users/gnlc/Code/react-native-gnlc-cmyk/App.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: -50px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  flex: 0.25;\\n  position: relative;\\n  z-index: 1;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  align-items: stretch;\\n  justify-content: center;\\n  z-index: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styled from \"styled-components/native\";\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\"\n};\nconst {\n  width,\n  height\n} = Dimensions.get(\"window\");\n\nconst isPortrait = () => {\n  return height >= width;\n};\n\nconst isLandscape = () => {\n  return width >= height;\n};\n\nconsole.log(width, height);\nconst Container = styled.View(_templateObject());\nconst Row = styled.View(_templateObject2(), props => props.backgroundColor);\nconst Letter = styled.View(_templateObject3());\nexport default App = () => {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }), React.createElement(Row, {\n    backgroundColor: colors.cyan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }, React.createElement(G, {\n    as: Letter,\n    color: processColor(colors.black),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    }\n  })), React.createElement(Row, {\n    backgroundColor: colors.magenta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }, React.createElement(N, {\n    as: Letter,\n    color: processColor(colors.cyan),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    }\n  })), React.createElement(Row, {\n    backgroundColor: colors.yellow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }, React.createElement(L, {\n    as: Letter,\n    color: processColor(colors.magenta),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  })), React.createElement(Row, {\n    backgroundColor: colors.black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    }\n  }, React.createElement(C, {\n    as: Letter,\n    color: processColor(colors.yellow),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/gnlc/Code/react-native-gnlc-cmyk/App.js"],"names":["React","styled","G","N","L","C","colors","black","cyan","magenta","yellow","width","height","Dimensions","get","isPortrait","isLandscape","console","log","Container","View","Row","props","backgroundColor","Letter","App","processColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,CAAP;AACA,OAAOC,CAAP;AACA,OAAOC,CAAP;AACA,OAAOC,CAAP;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,SADM;AAEbC,EAAAA,IAAI,EAAE,SAFO;AAGbC,EAAAA,OAAO,EAAE,SAHI;AAIbC,EAAAA,MAAM,EAAE;AAJK,CAAf;AAOA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAoBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,SAAOH,MAAM,IAAID,KAAjB;AACD,CAFD;;AAIA,MAAMK,WAAW,GAAG,MAAM;AACxB,SAAOL,KAAK,IAAIC,MAAhB;AACD,CAFD;;AAIAK,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmBC,MAAnB;AAEA,MAAMO,SAAS,GAAGlB,MAAM,CAACmB,IAAV,mBAAf;AASA,MAAMC,GAAG,GAAGpB,MAAM,CAACmB,IAAV,qBAIcE,KAAD,IAAWA,KAAK,CAACC,eAJ9B,CAAT;AAOA,MAAMC,MAAM,GAAGvB,MAAM,CAACmB,IAAV,oBAAZ;AAKA,eAAeK,GAAG,GAAG,MAAM;AACzB,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAEnB,MAAM,CAACE,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD;AAAG,IAAA,EAAE,EAAEgB,MAAP;AAAe,IAAA,KAAK,EAAEE,YAAY,CAACpB,MAAM,CAACC,KAAR,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAED,MAAM,CAACG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD;AAAG,IAAA,EAAE,EAAEe,MAAP;AAAe,IAAA,KAAK,EAAEE,YAAY,CAACpB,MAAM,CAACE,IAAR,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAQE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAEF,MAAM,CAACI,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD;AAAG,IAAA,EAAE,EAAEc,MAAP;AAAe,IAAA,KAAK,EAAEE,YAAY,CAACpB,MAAM,CAACG,OAAR,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EAWE,oBAAC,GAAD;AAAK,IAAA,eAAe,EAAEH,MAAM,CAACC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD;AAAG,IAAA,EAAE,EAAEiB,MAAP;AAAe,IAAA,KAAK,EAAEE,YAAY,CAACpB,MAAM,CAACI,MAAR,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAiBD,CAlBD","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  processColor,\n  View,\n  Dimensions,\n  StatusBar,\n} from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\n\n// const width = \"80%\";\n// const height = \"40%\";\n\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\",\n};\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst isPortrait = () => {\n  return height >= width;\n};\n\nconst isLandscape = () => {\n  return width >= height;\n};\n\nconsole.log(width, height);\n\nconst Container = styled.View`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: center;\n  z-index: 0;\n`;\n\nconst Row = styled.View`\n  flex: 0.25;\n  position: relative;\n  z-index: 1;\n  background-color: ${(props) => props.backgroundColor};\n`;\n\nconst Letter = styled.View`\n  position: absolute;\n  top: -50px;\n`;\n\nexport default App = () => {\n  return (\n    <Container>\n      <StatusBar hidden />\n      <Row backgroundColor={colors.cyan}>\n        <G as={Letter} color={processColor(colors.black)} />\n      </Row>\n      <Row backgroundColor={colors.magenta}>\n        <N as={Letter} color={processColor(colors.cyan)} />\n      </Row>\n      <Row backgroundColor={colors.yellow}>\n        <L as={Letter} color={processColor(colors.magenta)} />\n      </Row>\n      <Row backgroundColor={colors.black}>\n        <C as={Letter} color={processColor(colors.yellow)} />\n      </Row>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}