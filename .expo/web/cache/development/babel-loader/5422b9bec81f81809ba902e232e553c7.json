{"ast":null,"code":"var _jsxFileName = \"/Users/gnlc/Code/react-native-gnlc-cmyk/App.js\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\"\n};\nconst {\n  width,\n  height\n} = Dimensions.get(\"window\");\n\nconst isPortrait = () => {\n  return height >= width;\n};\n\nconst isLandscape = () => {\n  return width >= height;\n};\n\nconsole.log(width, height);\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 4,\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n    zIndex: 0\n  },\n  row: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    zIndex: 1\n  },\n  letter: {}\n});\nexport default App = () => {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }), React.createElement(View, {\n    style: _objectSpread({}, styles.row, {\n      backgroundColor: colors.cyan\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  }, React.createElement(G, {\n    color: processColor(colors.black),\n    style: styles.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  })), React.createElement(View, {\n    style: _objectSpread({}, styles.row, {\n      backgroundColor: colors.magenta\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }, React.createElement(N, {\n    color: processColor(colors.cyan),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    }\n  })), React.createElement(View, {\n    style: _objectSpread({}, styles.row, {\n      backgroundColor: colors.yellow\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }, React.createElement(L, {\n    color: processColor(colors.magenta),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    }\n  })), React.createElement(View, {\n    style: _objectSpread({}, styles.row, {\n      backgroundColor: colors.black\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }, React.createElement(C, {\n    color: processColor(colors.yellow),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/gnlc/Code/react-native-gnlc-cmyk/App.js"],"names":["React","G","N","L","C","colors","black","cyan","magenta","yellow","width","height","Dimensions","get","isPortrait","isLandscape","console","log","styles","StyleSheet","create","container","display","flex","flexDirection","alignItems","justifyContent","zIndex","row","overflow","letter","App","backgroundColor","processColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  processColor,\n  View,\n  Dimensions,\n  StatusBar,\n} from \"react-native\";\n\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\n\n// const width = \"80%\";\n// const height = \"40%\";\n\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\",\n};\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst isPortrait = () => {\n  return height >= width;\n};\n\nconst isLandscape = () => {\n  return width >= height;\n};\n\nconsole.log(width, height);\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 4,\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n    zIndex: 0,\n  },\n  row: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    zIndex: 1,\n  },\n  letter: {},\n});\n\nexport default App = () => {\n  return (\n    <View style={styles.container}>\n      <StatusBar hidden />\n      <View style={{ ...styles.row, backgroundColor: colors.cyan }}>\n        <G color={processColor(colors.black)} style={styles.letter} />\n      </View>\n      <View style={{ ...styles.row, backgroundColor: colors.magenta }}>\n        <N color={processColor(colors.cyan)} />\n      </View>\n      <View style={{ ...styles.row, backgroundColor: colors.yellow }}>\n        <L color={processColor(colors.magenta)} />\n      </View>\n      <View style={{ ...styles.row, backgroundColor: colors.black }}>\n        <C color={processColor(colors.yellow)} />\n      </View>\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}