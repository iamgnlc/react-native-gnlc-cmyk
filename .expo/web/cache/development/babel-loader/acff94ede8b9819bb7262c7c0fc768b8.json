{"ast":null,"code":"var _jsxFileName = \"/Users/gnlc/Code/react-native-gnlc-cmyk/App.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  flex: 1;\\n  overflow: hidden;\\n  align-items: \", \";\\n  justify-content: center;\\n  z-index: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: 4;\\n  flex-direction: \", \";\\n  align-items: stretch;\\n  justify-content: center;\\n  z-index: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { useState } from \"react\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styled from \"styled-components/native\";\nimport Platform from \"./Platform\";\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\"\n};\n\nconst useForceUpdate = () => {\n  const [value, setValue] = useState(0);\n  return () => setValue(value => ++value);\n};\n\nconst Container = styled.View(_templateObject(), props => props.orientation === \"landscape\" ? \"row\" : \"column\");\nconst Row = styled.View(_templateObject2(), props => props.backgroundColor, props => props.orientation === \"landscape\" ? \"stretch\" : \"center\");\nconst Letter = styled.View(_templateObject3());\nDimensions.addEventListener(\"change\", () => {});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      devicetype: Platform.isTablet() ? \"tablet\" : \"phone\"\n    };\n    Dimensions.addEventListener(\"change\", () => {\n      this.setState({\n        orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\"\n      });\n    });\n  }\n\n  render() {\n    const {\n      orientation\n    } = this.state;\n    return React.createElement(Container, {\n      orientation: this.state.orientation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      }\n    }, React.createElement(StatusBar, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      }\n    }), React.createElement(Row, {\n      backgroundColor: colors.cyan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      }\n    }, React.createElement(G, {\n      as: Letter,\n      color: processColor(colors.black),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      }\n    })), React.createElement(Row, {\n      backgroundColor: colors.magenta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      }\n    }, React.createElement(N, {\n      as: Letter,\n      color: processColor(colors.cyan),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      }\n    })), React.createElement(Row, {\n      backgroundColor: colors.yellow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      }\n    }, React.createElement(L, {\n      as: Letter,\n      color: processColor(colors.magenta),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      }\n    })), React.createElement(Row, {\n      backgroundColor: colors.black,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      }\n    }, React.createElement(C, {\n      as: Letter,\n      color: processColor(colors.yellow),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gnlc/Code/react-native-gnlc-cmyk/App.js"],"names":["React","useState","styled","Platform","G","N","L","C","colors","black","cyan","magenta","yellow","useForceUpdate","value","setValue","Container","View","props","orientation","Row","backgroundColor","Letter","Dimensions","addEventListener","App","Component","constructor","state","isPortrait","devicetype","isTablet","setState","render","processColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { processColor, Text, Dimensions, StatusBar } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport Platform from \"./Platform\";\n\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\n\n// const width = \"80%\";\n// const height = \"40%\";\n\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\",\n};\n\nconst useForceUpdate = () => {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue((value) => ++value); // update the state to force render\n};\n\nconst Container = styled.View`\n  display: flex;\n  flex: 4;\n  flex-direction: ${(props) =>\n    props.orientation === \"landscape\" ? \"row\" : \"column\"};\n  align-items: stretch;\n  justify-content: center;\n  z-index: 0;\n`;\n\nconst Row = styled.View`\n  background-color: ${(props) => props.backgroundColor};\n  flex: 1;\n  overflow: hidden;\n  align-items: ${(props) =>\n    props.orientation === \"landscape\" ? \"stretch\" : \"center\"};\n  justify-content: center;\n  z-index: 1;\n`;\n\nconst Letter = styled.View``;\n\nDimensions.addEventListener(\"change\", () => {});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      devicetype: Platform.isTablet() ? \"tablet\" : \"phone\",\n    };\n\n    Dimensions.addEventListener(\"change\", () => {\n      this.setState({\n        orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      });\n    });\n  }\n\n  render() {\n    const { orientation } = this.state;\n    return (\n      <Container orientation={this.state.orientation}>\n        <StatusBar hidden />\n        <Row backgroundColor={colors.cyan}>\n          <G as={Letter} color={processColor(colors.black)} />\n        </Row>\n        <Row backgroundColor={colors.magenta}>\n          <N as={Letter} color={processColor(colors.cyan)} />\n        </Row>\n        <Row backgroundColor={colors.yellow}>\n          <L as={Letter} color={processColor(colors.magenta)} />\n        </Row>\n        <Row backgroundColor={colors.black}>\n          <C as={Letter} color={processColor(colors.yellow)} />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}