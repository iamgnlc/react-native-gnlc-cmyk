{"ast":null,"code":"var _jsxFileName = \"/Users/gnlc/Code/react-native-gnlc-cmyk/App.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  flex: 1;\\n  overflow: hidden;\\n  align-items: \", \";\\n  justify-content: center;\\n  z-index: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: 4;\\n  flex-direction: \", \";\\n  align-items: stretch;\\n  justify-content: center;\\n  z-index: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { useState } from \"react\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styled from \"styled-components/native\";\nimport Platform from \"./Platform\";\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\"\n};\nconst Components = {\n  g: {\n    component: React.createElement(G, {\n      as: Letter,\n      color: processColor(colors.black),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      }\n    }),\n    backgroundColor: colors.cyan\n  }\n};\nconst Container = styled.View(_templateObject(), props => props.orientation === \"landscape\" ? \"row\" : \"column\");\nconst Row = styled.View(_templateObject2(), props => props.backgroundColor, props => props.orientation === \"landscape\" ? \"center\" : \"stretch\", props => props.zIndex);\nconst Letter = styled.View(_templateObject3());\nDimensions.addEventListener(\"change\", () => {});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      devicetype: Platform.isTablet() ? \"tablet\" : \"phone\"\n    };\n    Dimensions.addEventListener(\"change\", () => {\n      this.setState({\n        orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\"\n      });\n    });\n  }\n\n  render() {\n    const {\n      orientation\n    } = this.state;\n    return React.createElement(Container, {\n      orientation: orientation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      }\n    }, React.createElement(StatusBar, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      }\n    }), Object.keys(Components).map((key, i) => {\n      return React.createElement(Row, {\n        key: i,\n        backgroundColor: \"#fff\",\n        zIndex: i * 10\n      }, key.component);\n    }), React.createElement(Row, {\n      orientation: orientation,\n      zIndex: 10,\n      backgroundColor: colors.cyan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      }\n    }, React.createElement(G, {\n      as: Letter,\n      color: processColor(colors.black),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      }\n    })), React.createElement(Row, {\n      orientation: orientation,\n      zIndex: 20,\n      backgroundColor: colors.magenta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      }\n    }, React.createElement(N, {\n      as: Letter,\n      color: processColor(colors.cyan),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      }\n    })), React.createElement(Row, {\n      orientation: orientation,\n      zIndex: 30,\n      backgroundColor: colors.yellow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      }\n    }, React.createElement(L, {\n      as: Letter,\n      color: processColor(colors.magenta),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      }\n    })), React.createElement(Row, {\n      orientation: orientation,\n      zIndex: 40,\n      backgroundColor: colors.black,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      }\n    }, React.createElement(C, {\n      as: Letter,\n      color: processColor(colors.yellow),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gnlc/Code/react-native-gnlc-cmyk/App.js"],"names":["React","useState","styled","Platform","G","N","L","C","colors","black","cyan","magenta","yellow","Components","g","component","Letter","processColor","backgroundColor","Container","View","props","orientation","Row","zIndex","Dimensions","addEventListener","App","Component","constructor","state","isPortrait","devicetype","isTablet","setState","render","Object","keys","map","key","i","createElement"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { processColor, Text, Dimensions, StatusBar } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport Platform from \"./Platform\";\n\nimport G from \"./assets/G\";\nimport N from \"./assets/N\";\nimport L from \"./assets/L\";\nimport C from \"./assets/C\";\n\nconst colors = {\n  black: \"#010202\",\n  cyan: \"#29AAE2\",\n  magenta: \"#E32185\",\n  yellow: \"#FAEA26\",\n};\n\nconst Components = {\n  g: {\n    component: <G as={Letter} color={processColor(colors.black)} />,\n    backgroundColor: colors.cyan,\n  },\n};\n\nconst Container = styled.View`\n  display: flex;\n  flex: 4;\n  flex-direction: ${(props) =>\n    props.orientation === \"landscape\" ? \"row\" : \"column\"};\n  align-items: stretch;\n  justify-content: center;\n  z-index: 0;\n`;\n\nconst Row = styled.View`\n  background-color: ${(props) => props.backgroundColor};\n  flex: 1;\n  overflow: hidden;\n  align-items: ${(props) =>\n    props.orientation === \"landscape\" ? \"center\" : \"stretch\"};\n  justify-content: center;\n  z-index: ${(props) => props.zIndex};\n`;\n\nconst Letter = styled.View``;\n\nDimensions.addEventListener(\"change\", () => {});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      devicetype: Platform.isTablet() ? \"tablet\" : \"phone\",\n    };\n\n    Dimensions.addEventListener(\"change\", () => {\n      this.setState({\n        orientation: Platform.isPortrait() ? \"portrait\" : \"landscape\",\n      });\n    });\n  }\n\n  render() {\n    const { orientation } = this.state;\n    return (\n      <Container orientation={orientation}>\n        <StatusBar hidden />\n        {Object.keys(Components).map((key, i) => {\n          return React.createElement(\n            Row,\n            { key: i, backgroundColor: \"#fff\", zIndex: i * 10 },\n            key.component\n          );\n        })}\n        <Row\n          orientation={orientation}\n          zIndex={10}\n          backgroundColor={colors.cyan}\n        >\n          <G as={Letter} color={processColor(colors.black)} />\n        </Row>\n        <Row\n          orientation={orientation}\n          zIndex={20}\n          backgroundColor={colors.magenta}\n        >\n          <N as={Letter} color={processColor(colors.cyan)} />\n        </Row>\n        <Row\n          orientation={orientation}\n          zIndex={30}\n          backgroundColor={colors.yellow}\n        >\n          <L as={Letter} color={processColor(colors.magenta)} />\n        </Row>\n        <Row\n          orientation={orientation}\n          zIndex={40}\n          backgroundColor={colors.black}\n        >\n          <C as={Letter} color={processColor(colors.yellow)} />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}